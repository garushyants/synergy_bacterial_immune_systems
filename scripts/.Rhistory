NearestDistances<-SetToCalculateDistances %>%
group_by(seqid) %>%
arrange(seqid,start) %>%
mutate(distanced = start - lag(end, n=1, default =NA),
distancel = V2 +lag(end, n=1, default =NA)-start) %>%
mutate(distance = pmin(distancel,distanced)) %>%#to clean the lengths
#with code below I select the distance to closest system,
#but this approach produces duplicates
mutate(mindist=ifelse(is.na(lead(distance)), distance,
ifelse(distance>lead(distance,n=1, default=NA),
lead(distance,n=1, default=NA),distance)),
paired=ifelse(is.na(lead(distance)), lag(defense_system2),
ifelse(distance>lead(distance,n=1, default=NA),
lead(defense_system2),
lag(defense_system2)))) %>%
mutate(pairOrdered=paste(pmin(defense_system2,paired),pmax(defense_system2,paired)))
NearestDistancesShort<-NearestDistances[,c("genome","seqid","mindist","pairOrdered")]
NearestDistancesNoDupl<-NearestDistancesShort[!duplicated(NearestDistancesShort),]
NearestDistancesClean<-subset(NearestDistancesNoDupl, !is.na(NearestDistancesNoDupl$mindist) &
!(NearestDistancesNoDupl$pairOrdered %in% c(Pagel_results_signifPos$pair,
Pagel_results_signifPos$pairrev)))
Allp1<-ggplot(NearestDistancesClean, aes(x=mindist,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7, fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(NearestDistancesClean$mindist),
color="dark green", alpha=.6)+
ylab("% of all distances")+
xlab("distance")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()
Allp1
getPairDistance<-function(sysI, sysII)
{
#sysI<-"RM I"
#sysII<-"RM II"
SystemPairsDfAll<-subset(SetToCalculateDistances, SetToCalculateDistances$defense_system2 %in% c(sysI,sysII))
#filter contigs with only one system
PairContigsAll<-SystemPairsDfAll %>% group_by(seqid,genome) %>%summarize(count=length(unique(defense_system2)))
PairContigsForCount<-subset(PairContigsAll, PairContigsAll$count>1)
SystemPairsDf<-subset(SystemPairsDfAll, SystemPairsDfAll$seqid %in% PairContigsForCount$seqid)
PairNearestDistances<-SystemPairsDf %>%
group_by(seqid) %>%
arrange(seqid,start) %>%
mutate(distanced = start - lag(end, n=1, default =NA),
distancel = ChromosomeLengthsSep[ChromosomeLengthsSep$seqid == seqid,]$V2 +lag(end, n=1, default =NA)-start) %>%
mutate(distance = pmin(distancel,distanced))
PairNearestDistances$System.I<-rep(sysI, length(PairNearestDistances$seqid))
PairNearestDistances$System.II<-rep(sysII, length(PairNearestDistances$seqid))
#remove distances between systems of the same type
PairNearestDistances$prev<-lag(PairNearestDistances$defense_system2)
PairNearestDistancesClear<-subset(PairNearestDistances,
PairNearestDistances$defense_system2 != PairNearestDistances$prev &
!is.na(PairNearestDistances$distance))
return(PairNearestDistancesClear)
}
###execute
DistancesListOfDFs<-apply(Pagel_results_signifPos, 1, function(a) getPairDistance(a[3], a[2]))
PairDistancesDf<-do.call("rbind",DistancesListOfDFs)
PairDistancesDf$pair<-paste(PairDistancesDf$System.II,
PairDistancesDf$System.I)
AllPairsPlotp1<-ggplot(PairDistancesDf, aes(x=distance,color=pair,fill=pair,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.4)+
geom_vline(xintercept=median(PairDistancesDf$distance),
color="dark green", alpha=.4)+
ylab("% of all distances")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()+
theme(legend.position = "none")
AllPairsPlotp1
AllPairsPlotCombined<-ggarrange(Allp1,
AllPairsPlotp1,
nrow=2,
align="v")
AllPairsPlotCombined
AllPairsPlotp1<-ggplot(PairDistancesDf, aes(x=distance,color=pair,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.4)+
geom_vline(xintercept=median(PairDistancesDf$distance),
color="dark green", alpha=.4)+
ylab("% of all distances")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()+
theme(legend.position = "none")
AllPairsPlotp1
AllPairsPlotp1<-ggplot(PairDistancesDf, aes(x=distance,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.4)+
geom_vline(xintercept=median(PairDistancesDf$distance),
color="dark green", alpha=.4)+
ylab("% of all distances")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()+
theme(legend.position = "none")
AllPairsPlotp1
AllPairsPlotp1<-ggplot(PairDistancesDf, aes(x=distance,
after_stat(count*100/sum(count))),
fill = "#023858",color = "#023858")+
geom_histogram(bins=100,
alpha = 0.4)+
geom_vline(xintercept=median(PairDistancesDf$distance),
color="dark green", alpha=.4)+
ylab("% of all distances")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()+
theme(legend.position = "none")
AllPairsPlotp1
AllPairsPlotp1<-ggplot(PairDistancesDf, aes(x=distance,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.4,
fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(PairDistancesDf$distance),
color="dark green", alpha=.4)+
ylab("% of all distances")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()+
theme(legend.position = "none")
AllPairsPlotp1
AllPairsPlotp1<-ggplot(PairDistancesDf, aes(x=distance,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7,
fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(PairDistancesDf$distance),
color="#bd0026",
width=2)+
ylab("% of all distances")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()+
theme(legend.position = "none")
AllPairsPlotp1
AllPairsPlotp1<-ggplot(PairDistancesDf, aes(x=distance,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7,
fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(PairDistancesDf$distance),
color="#bd0026",
lwidth=2)+
ylab("% of all distances")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()+
theme(legend.position = "none")
AllPairsPlotp1
AllPairsPlotp1<-ggplot(PairDistancesDf, aes(x=distance,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7,
fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(PairDistancesDf$distance),
color="#bd0026",
size=2)+
ylab("% of all distances")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()+
theme(legend.position = "none")
AllPairsPlotp1
AllPairsPlotp1<-ggplot(PairDistancesDf, aes(x=distance,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7,
fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(PairDistancesDf$distance),
color="#bd0026",
linewidth=2)+
ylab("% of all distances")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()+
theme(legend.position = "none")
AllPairsPlotp1
Allp1<-ggplot(NearestDistancesClean, aes(x=mindist,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7, fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(NearestDistancesClean$mindist),
color="#bd0026",
linewidth=1.5)+
ylab("% of all distances")+
xlab("distance")+
ggtitle("All")
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()
Allp1<-ggplot(NearestDistancesClean, aes(x=mindist,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7, fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(NearestDistancesClean$mindist),
color="#bd0026",
linewidth=1.5)+
ylab("% of all distances")+
xlab("distance")+
ggtitle("All")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_bw()
Allp1
Allp1<-ggplot(NearestDistancesClean, aes(x=mindist,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7, fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(NearestDistancesClean$mindist),
color="#bd0026",
linewidth=1.5)+
ylab("% of all distances")+
xlab("distance")+
ggtitle("All")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_classic()+
theme(axis.text = element_text(family="ArielMT"),
axis.title = element_text(family = "ArielMT"),
title = element_text(family="ArielMT"))
Allp1
Allp1<-ggplot(NearestDistancesClean, aes(x=mindist,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7, fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(NearestDistancesClean$mindist),
color="#bd0026",
linewidth=1.5)+
ylab("% of all distances")+
xlab("distance")+
ggtitle("All")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_classic()+
theme(axis.text = element_text(family="ArielMT", size=5),
axis.title = element_text(family = "ArielMT"),
title = element_text(family="ArielMT"))
Allp1
Allp1<-ggplot(NearestDistancesClean, aes(x=mindist,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7, fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(NearestDistancesClean$mindist),
color="#bd0026",
linewidth=1.5)+
ylab("% of all distances")+
xlab("distance")+
ggtitle("All")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_classic()+
theme(axis.text = element_text(family="ArielMT", size=12),
axis.title = element_text(family = "ArielMT"),
title = element_text(family="ArielMT"))
Allp1
AllPairsPlotp1<-ggplot(PairDistancesDf, aes(x=distance,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7,
fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(PairDistancesDf$distance),
color="#bd0026",
linewidth=1.5)+
ylab("% of all distances")+
xlab("distance")+
ggtitle("Co-occuring pairs")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_classic()+
theme(axis.text = element_text(family="ArielMT", size=12),
axis.title = element_text(family = "ArielMT"),
title = element_text(family="ArielMT"))
AllPairsPlotp1
AllPairsPlotCombined<-ggarrange(Allp1,
AllPairsPlotp1,
nrow=2,
align="v")
AllPairsPlotCombined
ggsave("EcoliEnterAllPositive_vs_allclosest.png",
path=folderForOutput,
AllPairsPlotCombined, width=20, height=15, units="cm",
dpi=300)
ggsave("EcoliEnterAllPositive_vs_allclosest.svg",
path=folderForOutput,
AllPairsPlotCombined, width=20, height=15, units="cm",
dpi=300)
NearestDistancesClean$pair<-rep(" All", length(NearestDistancesClean$seqid))
LongPlot<-ggplot()+
geom_boxplot(data=NearestDistancesClean, aes(x=mindist,
y=pair,
fill=pair),
fill = "#023858")+
geom_vline(xintercept=median(NearestDistancesClean$mindist),
color="dark green", alpha=.4)+
geom_boxplot(data=PairDistancesDf,
aes(x=distance,
y=pair,
fill= pair))+
xlim(c(-10000,500000))+
theme_bw()+
theme(legend.position = "none")
LongPlot
LongPlot<-ggplot()+
geom_boxplot(data=NearestDistancesClean, aes(x=mindist,
y=pair,
fill=pair),
fill = "#023858")+
geom_vline(xintercept=median(NearestDistancesClean$mindist),
color="#bd0026",
linewidth=1.5, alpha=.4)+
geom_boxplot(data=PairDistancesDf,
aes(x=distance,
y=pair,
fill= pair))+
xlim(c(-10000,500000))+
theme_bw()+
theme(legend.position = "none")
LongPlot
LongPlot<-ggplot()+
geom_boxplot(data=NearestDistancesClean, aes(x=mindist,
y=pair,
fill=pair),
fill = "#023858")+
geom_vline(xintercept=median(NearestDistancesClean$mindist),
color="#bd0026",
linewidth=1.5, alpha=.4)+
geom_boxplot(data=PairDistancesDf,
aes(x=distance,
y=pair,
fill= pair))+
xlim(c(-10000,500000))+
xlab("Distance (bp)")
theme_bw()+
theme(legend.position = "none",
axis.text = element_text(family="ArielMT", size=12),
axis.title = element_text(family = "ArielMT"))
LongPlot
LongPlot<-ggplot()+
geom_boxplot(data=NearestDistancesClean, aes(x=mindist,
y=pair,
fill=pair),
fill = "#023858")+
geom_vline(xintercept=median(NearestDistancesClean$mindist),
color="#bd0026",
linewidth=1.5, alpha=.4)+
geom_boxplot(data=PairDistancesDf,
aes(x=distance,
y=pair,
fill= pair))+
xlim(c(-10000,500000))+
xlab("Distance (bp)")+
theme_bw()+
theme(legend.position = "none",
axis.text = element_text(family="ArielMT", size=12),
axis.title = element_text(family = "ArielMT"))
LongPlot
ggsave("EcoliEnter_AllPositive_long_barplot.png",
path=folderForOutput,
LongPlot, width=10, height=40, units="cm",
dpi=300)
ggsave("EcoliEnter_AllPositive_long_barplot.svg",
path=folderForOutput,
LongPlot, width=10, height=40, units="cm",
dpi=300)
Allp1<-ggplot(NearestDistancesClean, aes(x=mindist,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7, fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(NearestDistancesClean$mindist),
color="#bd0026",
linewidth=1.5)+
ylab("% of all distances")+
xlab("Distance (bp)")+
ggtitle("All")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_classic()+
theme(axis.text = element_text(family="ArielMT", size=12),
axis.title = element_text(family = "ArielMT"),
title = element_text(family="ArielMT"))
Allp1
AllPairsPlotp1<-ggplot(PairDistancesDf, aes(x=distance,
after_stat(count*100/sum(count))))+
geom_histogram(bins=100,
alpha = 0.7,
fill = "#023858",color = "#023858")+
geom_vline(xintercept=median(PairDistancesDf$distance),
color="#bd0026",
linewidth=1.5)+
ylab("% of all distances")+
xlab("Distance (bp)")+
ggtitle("Co-occuring pairs")+
scale_x_continuous(limits= c(-30000,2000000))+
theme_classic()+
theme(axis.text = element_text(family="ArielMT", size=12),
axis.title = element_text(family = "ArielMT"),
title = element_text(family="ArielMT"))
AllPairsPlotp1
AllPairsPlotCombined<-ggarrange(Allp1,
AllPairsPlotp1,
nrow=2,
align="v")
AllPairsPlotCombined
ggsave("EcoliEnterAllPositive_vs_allclosest.png",
path=folderForOutput,
AllPairsPlotCombined, width=20, height=15, units="cm",
dpi=300)
ggsave("EcoliEnterAllPositive_vs_allclosest.svg",
path=folderForOutput,
AllPairsPlotCombined, width=20, height=15, units="cm",
dpi=300)
ggsave("EcoliEnter_AllPositive_long_barplot.png",
path=folderForOutput,
LongPlot, width=10, height=40, units="cm",
dpi=300)
ggsave("EcoliEnter_AllPositive_long_barplot.svg",
path=folderForOutput,
LongPlot, width=10, height=40, units="cm",
dpi=300)
ggsave("EcoliEnter_AllPositive_long_barplot.png",
path=folderForOutput,
LongPlot, width=10, height=40, units="cm",
dpi=300)
ggsave("EcoliEnter_AllPositive_long_barplot.svg",
path=folderForOutput,
LongPlot, width=10, height=40, units="cm",
dpi=300)
ggsave("EcoliEnter_AllPositive_long_barplot.png",
path=folderForOutput,
LongPlot, width=20, height=40, units="cm",
dpi=300)
ggsave("EcoliEnter_AllPositive_long_barplot.svg",
path=folderForOutput,
LongPlot, width=10, height=40, units="cm",
dpi=300)
SystemsMedian<-PairDistancesDf %>% group_by(System.I,System.II) %>%
summarize(median=median(distance),
count = length(distance),
test=wilcox.test(distance,NearestDistancesClean$mindist, alternative="less")$p.value)
SystemsSignif<-subset(SystemsMedian, SystemsMedian$test*length(SystemsMedian$System.I) < 0.001 &
SystemsMedian$count > 10)
write_xlsx(SystemsSignif, path=paste("../data/cooccurence_vs_genome_distance/PositiveSystemsSignifCloser.xlsx", sep="/"))
ForPlotSubset<-subset(PairDistancesDf, paste(PairDistancesDf$System.I,PairDistancesDf$System.II) %in%
paste(SystemsSignif$System.I,SystemsSignif$System.II))
p2<-ggplot(ForPlotSubset,
aes(x=distance, fill= paste(System.I, System.II)))+
geom_histogram(position="identity", alpha=.5, binwidth=10000)+
geom_vline(xintercept=median(NearestDistancesClean$mindist))+
facet_wrap(~pair, scales = "free_y")+
xlim(c(-10000,500000))+
theme_bw()+
theme(legend.position = "none")
p2
DrawPairTree<-function(sysI,sysII){
#sysI<-"Zorya II"
#sysII<-"Druantia III"
#subset initial system locations
PairSystemLocationLong<-subset(SystemsLocationEcoli,
SystemsLocationEcoli$defense_system2 %in% c(sysI,sysII))[,c("genome","seqid","defense_system2")]
PairSystemLocationLongForTree<-PairSystemLocationLong %>%
group_by(genome) %>%
dplyr::summarise(system2 = ifelse(length(unique(defense_system2))>1,"both",defense_system2),
system = ifelse(length(unique(defense_system2))>1,0,
ifelse(defense_system2[1] == sysI,1,2)),
chromosomes2= ifelse(length(unique(seqid))>1,"different","same"),
chromosomes = ifelse(length(unique(seqid))>1,0,1))
names(PairSystemLocationLongForTree)[1]<-"label"
#subset distances
SelectedPairDistances<-subset(PairDistancesDf, PairDistancesDf$System.I %in% c(sysI,sysII) &
PairDistancesDf$System.II %in% c(sysI,sysII))[,c("genome","seqid","plasmid","distance")]
SelectedPairDistances$logdist<-log10(SelectedPairDistances$distance)
SelectedPairDistances$plasmid2<-ifelse(SelectedPairDistances$plasmid == 1, "plasmid", "chromosome")
names(SelectedPairDistances)[1]<-"label"
#subset tree
LeavesToKeep<-unique(SystemsLocationEcoli$genome)
subtree<-get_subtree_with_tips(tree, only_tips = LeavesToKeep)$subtree
#draw tree
EcolFromEnterDataSubtree<-ggtree(subtree, size =0.1, color = "#525252")
PairPlot<-EcolFromEnterDataSubtree +
geom_facet(data=PairSystemLocationLongForTree,
panel="system",
geom=geom_tile,
mapping = aes(x=system, fill=system2),
width=0.7) +
scale_fill_manual(values = c("#6a3d9a","#e31a1c","#1f78b4"),na.value="white")+
new_scale_fill()+
##
geom_facet(data=PairSystemLocationLongForTree,
panel = "chromosome",
geom=geom_tile,
mapping=aes(x=chromosomes, fill=chromosomes2),
width=0.7)+
scale_fill_manual(values = c("#8c510a","#01665e"), name="chromosomes")+
##
new_scale_fill()+
geom_facet(data=SelectedPairDistances,
panel="location",
geom=geom_tile,
mapping=aes(x=plasmid, fill=plasmid2),
width=0.7)+
scale_fill_manual(values = c("#fdb462","#b3de69"), name="location")+
geom_facet(
panel="Distance",
data = SelectedPairDistances,
geom = geom_col,
aes(x = distance),
orientation = 'y',
color = "#6a3d9a",
width=1)+
theme_tree2()
PairPlot2<-facet_widths(PairPlot, widths = c(1, 0.3,0.2,0.2,0.7))
return(PairPlot2)
}
#draw and save
for (i in 1:nrow(SystemsSignif))
{
treeplot<-DrawPairTree(SystemsSignif[i,"System.I"],SystemsSignif[i,"System.II"])
ggsave(paste(SystemsSignif[i,"System.I"],SystemsSignif[i,"System.II"],"tree_with_distances.png",sep="_"),
plot=treeplot,path=folderForOutput,
width=30,height=40,dpi =400,units="cm")
}
