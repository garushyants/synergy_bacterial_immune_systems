library(writexl)
path<-getwd()
setwd(path)
#setwd("../")
#basic parameters
subsetsize<-1000
folderForFigures<-"./figures/defence_systems_vs_phylogenetic_distance/"
folderForData<-"./data/defence_systems_vs_phylogenetic_distance/"
if (!dir.exists(folderForFigures)){
dir.create(folderForFigures)
}else{
print("dir exists")
}
if (!dir.exists(folderForData)){
dir.create(folderForData)
}else{
print("dir exists")
}
####
#read Mash distance matrix
getCorrelationPlot<-function(mashmatrix,tree,defensesystemsfile,subset=0,prefix = "",rx=0.01,ry=0.97){
# mashmatrix<-"./data/mash_distances/Ecoli_matrix.phylip"
# tree<-"./data/Ecoli_phylogroups/Ecoli_E1.nwk"
# defensesystemsfile<-"./data/26k_Ecoli_with_prophages.csv"
# subset<-0
# prefix<-"Ecoli_E1"
# rx<-0.005
DistanceMatrix<-read.csv(mashmatrix, sep=" ", skip=1, header=F,
stringsAsFactors = F)
DistanceMatrix$V1<-str_replace(DistanceMatrix$V1,'.fna','')
colnames(DistanceMatrix)<-c("Genome", DistanceMatrix$V1)
rownames(DistanceMatrix)<-DistanceMatrix$Genome
#read phylogenetic tree in order to remove contaminated genomes
Tree<-read.tree(tree)
newtiplabels<-gsub(".fna","",Tree$tip.label)
###subset genomes
GenomesSubset<-newtiplabels
if (subset > 0)
{
GenomesSubset<-sample(newtiplabels,subsetsize)
}
#subset mash distances
DistmatSubsetPre<-subset(DistanceMatrix, DistanceMatrix$Genome %in%
GenomesSubset)
DistmatSubset<-DistmatSubsetPre[,colnames(DistmatSubsetPre) %in% GenomesSubset]
DistmatSubsetOrdered<-DistmatSubset[, sort(colnames(DistmatSubset))]
#Convert subset to long
PhylDistDf<-melt(as.matrix(DistmatSubset),varnames = c("row", "col"))
# PhylDistWithoutRepeats<-PhylDistDf[as.numeric(PhylDistDf$row) > as.numeric(PhylDistDf$col), ]
#############
#read defense systems info
EcoliDefense<-read.csv(defensesystemsfile, header = T)
#get subset
EcoliDefenseSubset<-subset(EcoliDefense,
EcoliDefense$genome %in% GenomesSubset)
#transform
DefenseBySystem<-EcoliDefenseSubset %>% group_by(genome,immune_system) %>%
count(immune_system)
DefenseBySystemWide<-as.data.frame(DefenseBySystem %>%
pivot_wider(names_from = immune_system, values_from = n))
#binary
DefenseBySystemWideBinary<-DefenseBySystemWide[,c(2:ncol(DefenseBySystemWide))]
rownames(DefenseBySystemWideBinary)<-DefenseBySystemWide$genome
DefenseBySystemWideBinary[is.na(DefenseBySystemWideBinary)]<-0
DefenseBySystemWideBinary[DefenseBySystemWideBinary>0]<-1
#filter out systems that are rarely found
#I set 5% filter
Systemsum<-colSums(DefenseBySystemWideBinary)
mincount<-0.005 #System was found in 0.5% of all genomes
SystemsToKeep<-names(Systemsum[Systemsum > nrow(DefenseBySystemWideBinary)*mincount])
DefenseBySystemWideBinaryFiltered<-DefenseBySystemWideBinary[,colnames(DefenseBySystemWideBinary) %in%
SystemsToKeep]
#########
#Calculate distances
GenDist<-dist(data.matrix(DefenseBySystemWideBinaryFiltered,rownames.force = T),
method ="binary")
#melt distances
GenDistDf<-melt(as.matrix(GenDist), varnames = c("row", "col"))
##########Plot
ForPlotWithRepeats<-merge(PhylDistDf,GenDistDf, by=c('row','col'))
#is it correct???
ForPlot<-ForPlotWithRepeats[as.numeric(ForPlotWithRepeats$row) > as.numeric(ForPlotWithRepeats$col), ]
##remove outliers
ForPlotNoOutliers<-subset(ForPlot,ForPlot$value.x < 0.95)
#####Save data in excel file
ToSave<-ForPlotNoOutliers
colnames(ToSave)[3:4]<-c("MashDistance","DefenseSystemsContentDistance")
if(prefix =="")
{
preprefix<-strsplit(mashmatrix,"/")[[1]]
prefix<-str_replace(preprefix[length(preprefix)],"_matrix.phylip","")
}
filename<-paste0(prefix,"_data_for_plot.xlsx")
write_xlsx(ToSave,path =paste0(folderForData,"/",filename))
#####
###
CorCoef<-cor.test(ForPlotNoOutliers$value.x, ForPlotNoOutliers$value.y,
method="spearman",
exact = F)
pvalue<-ifelse(CorCoef$p.value == 0, "p-value < 2.2e-16",
paste("p-value =",format(CorCoef$p.value, 2, digits=3)))
#2d density plot
CorrelationPlotDensity<-ggplot(ForPlotNoOutliers,
aes(x=value.x,
y=value.y))+
geom_hex(aes(fill=log10(after_stat(count))),
bins=80)+
geom_smooth(method = "lm",
formula = y~x,
color="#993404",
alpha=0.5,
se = TRUE,
level=0.95,
linewidth=0.5)+
scale_fill_gradientn(colors = c("#f7fcf0","#e0f3db","#ccebc5",
"#a8ddb5","#7bccc4","#4eb3d3",
"#2b8cbe","#0868ac","#084081"),
name="Count (log10)")+
ylim(c(-0.01,1.03))+
annotate("text", label=paste0("r = ",format(round(CorCoef$estimate, 2), nsmall = 2),
"\n",pvalue),
x=rx,y=ry,
hjust=0,
size=1.5,
family="ArialMT")+
xlab("Mash distance")+
ylab("Distance between defense system composition (Jaccard)")+
theme_classic()+
theme(#axis.text = element_text(size=5),
text = element_text(family="ArialMT",size=5),
#axis.title=element_text(size=5),
legend.title = element_text(size=5),
legend.key.size = unit(0.2,"cm"))
CorrelationPlotDensity
#######Save figures
plotname<-paste0(folderForFigures,"/",prefix,"_sub",subset,
"_correlation_phylogenetic_distance_vs_immune_systems_densities")
ggsave(paste0(plotname,".png"),
plot=CorrelationPlotDensity,
width=10, height=8, units="cm", dpi=300)
ggsave(paste0(plotname,".svg"),
plot=CorrelationPlotDensity,
width=10, height=8, units="cm", dpi=300)
}
####################
#Doing it for all datasets
#Whole 26k Ecoli
getCorrelationPlot("./data/mash_distances/Ecoli_matrix.phylip",
"./data/Ecoli_tree_rapidnj.rM2.treeshrink_corrected.nwk",
"./data/ecoli_filtered.csv",subset=subsetsize)
#Enterobacteriales dataset
getCorrelationPlot("./data/mash_distances/entertree_matrix.phylip",
"./data/entertree_resavediTOL_newick.txt",
"./data/enter_filtered.csv",subset=subsetsize)
#Pseumonadales dataset
getCorrelationPlot("./data/mash_distances/pseutree_matrix.phylip",
"./data/pseutree_resavediTOL_newick.txt",
"./data/pseu_filtered.csv",subset=subsetsize)
#Bacillales dataset
getCorrelationPlot("./data/mash_distances/bacitree_matrix.phylip",
"./data/bacitree_resavediTOL_newick.txt",
"./data/baci_filtered.csv",subset=subsetsize)
#Burkholdriales dataset
getCorrelationPlot("./data/mash_distances/burktree_matrix.phylip",
"./data/burktree_resavediTOL_newick.txt",
"./data/burk_filtered.csv",subset=subsetsize)
########
#Do the same for the individual E.coli phylogroups
#the total number of leaves in those groups is  ~1000, that is why no subsetting here
getCorrelationPlot("./data/mash_distances/Ecoli_matrix.phylip",
"./data/Ecoli_phylogroups/Ecoli_E2.nwk",
"./data/ecoli_filtered.csv",prefix = "Ecoli_E2",rx=0.005)
getCorrelationPlot("./data/mash_distances/Ecoli_matrix.phylip",
"./data/Ecoli_phylogroups/Ecoli_E1.nwk",
"./data/ecoli_filtered.csv",prefix = "Ecoli_E1",rx=0.005)
getCorrelationPlot("./data/mash_distances/Ecoli_matrix.phylip",
"./data/Ecoli_phylogroups/Ecoli_C.nwk",
"./data/ecoli_filtered.csv",prefix = "Ecoli_C",rx=0.005)
#sub-setting for larger groups
getCorrelationPlot("./data/mash_distances/Ecoli_matrix.phylip",
"./data/Ecoli_phylogroups/Ecoli_A.nwk",
"./data/ecoli_filtered.csv",subset=subsetsize,prefix = "Ecoli_A",
rx=0.005)
getCorrelationPlot("./data/mash_distances/Ecoli_matrix.phylip",
"./data/Ecoli_phylogroups/Ecoli_B1.nwk",
"./data/ecoli_filtered.csv",subset=subsetsize,prefix = "Ecoli_B1",
rx=0.005)
getCorrelationPlot("./data/mash_distances/Ecoli_matrix.phylip",
"./data/Ecoli_phylogroups/Ecoli_B21.nwk",
"./data/ecoli_filtered.csv",subset=subsetsize,prefix = "Ecoli_B21",
rx=0.005)
getCorrelationPlot("./data/mash_distances/Ecoli_matrix.phylip",
"./data/Ecoli_phylogroups/Ecoli_B22.nwk",
"./data/ecoli_filtered.csv",subset=subsetsize,prefix = "Ecoli_B22",
rx=0.005)
library(phytools)
library(ggtree)
library(ggtreeExtra)
library(ggnewscale)
library(ape)
library(tidyr)
library(dplyr)
library(stringr)
library(ggplot2)
library(RColorBrewer)
library(castor)
path<-getwd()
setwd(path)
#Read phylogenetic tree
tree <- read.tree("./data/Ecoli_tree_rapidnj.rM2.treeshrink_corrected.nwk")
###do proper names on the tree that match the data
newtipnames<-tree$tip.label
rep_str = c("'"='','.fna'='')
newtipnames<-str_replace_all(newtipnames,rep_str)
tree$tip.label<-newtipnames
#Read assembly_summary data
AssemblySummary<-read.csv("./data/Ecoli_numContigs_vs_numDefence/assembly_summary_refseq_ecoli.csv", header = T)
AssemblySummaryFiltered<-subset(AssemblySummary, AssemblySummary$assembly_accession %in% newtipnames)
###Read info about phylogroups
TenThouEcoliData<-read.csv("./data/Ecoli_phylogroups/Abram_metadata.csv", header=T)
PhyloGenomesInDataset<-subset(TenThouEcoliData,
TenThouEcoliData$id %in% AssemblySummaryFiltered$paired_asm_comp)[,c("id","Phylogroup")]
PreAlltipsCorrectNames<-merge(PhyloGenomesInDataset, AssemblySummaryFiltered,
by.x="id", by.y="paired_asm_comp", all.y = T)[,c(2,3)]
#add all other names
NTdf<-as.data.frame(newtipnames)
AlltipsCorrectNames<-merge(PreAlltipsCorrectNames,NTdf, by.x="assembly_accession",
by.y ="newtipnames", all.y=T)
AlltipsCorrectNames$alpha<-ifelse(is.na(AlltipsCorrectNames$Phylogroup),0,1)
AlltipsCorrectNames<- AlltipsCorrectNames %>% replace(is.na(.),"none")
Clusters003<-read.csv("./data/Ecoli_phylogroups/TreeCluster_0.03_clusters", header=T, sep="\t")
Clusters003$SequenceName<-str_replace(Clusters003$SequenceName,".fna","")
ClustersOnly<-subset(Clusters003,Clusters003$ClusterNumber > 0)
ClusterNodes<-data.frame(node=character(), cluster=character())
clustersun<-unique(ClustersOnly$ClusterNumber)
clusnum<-length(clustersun)
getPalette=colorRampPalette(brewer.pal(9, "Set1"))
cluscol<-getPalette(clusnum)
for (i in c(1:clusnum))
{
#cl = unique(Clusters003$ClusterNumber)[5]
leaves=ClustersOnly[ClustersOnly$ClusterNumber==clustersun[i],1]
node<-findMRCA(tree,leaves,type="node")
cln<-data.frame(node=node,cluster=clustersun[i])
ClusterNodes<-rbind(ClusterNodes,cln)
}
plot_clade<-function(clade)
{
#vizualize to check that things were selected correctly
cladeplot<-ggtree(clade, layout = 'circular') %<+% AlltipsCorrectNames +
geom_tippoint(aes(color = Phylogroup, alpha =alpha),
size =0.8, show.legend = T) +
scale_alpha(guide = 'none')+
theme(legend.position = "right",
plot.margin = unit(c(0,0,0,0), "mm"))
return(cladeplot)
}
#############################
#Separate phylogroups E2 and E1
#E1 and E2 are cluster 11
Ephylo<-extract.clade(tree,ClusterNodes[ClusterNodes$cluster==11,"node"])
#plot_clade(Ephylo)
#E1
E2leaves<-AlltipsCorrectNames[AlltipsCorrectNames$Phylogroup=='E2',1]
E1refined_clade<-drop.clade(Ephylo,E2leaves)
#plot_clade(E1refined_clade)
#E2
E2clade<-extract.clade(Ephylo,findMRCA(Ephylo,E2leaves,type="node"))
#plot_clade(E2clade)
##############################
#Separate clades for phylogroups B1 and C
#B1 and C cluster 17
B1Cphylo<-extract.clade(tree,ClusterNodes[ClusterNodes$cluster==17,"node"])
#plot_clade(B1Cphylo)
#B1
Cleaves<-AlltipsCorrectNames[AlltipsCorrectNames$Phylogroup=='C',1]
B1refined_clade<-drop.clade(B1Cphylo,Cleaves)
#plot_clade(B1refined_clade)
#C
Cclade<-extract.clade(B1Cphylo,findMRCA(B1Cphylo,Cleaves,type="node"))
#plot_clade(Cclade)
# #Other important clades
# B21phylo<-extract.clade(tree,ClusterNodes[ClusterNodes$cluster==10,"node"])
# #plot_clade(B21phylo)
#
# B22phylo<-extract.clade(tree,ClusterNodes[ClusterNodes$cluster==9,"node"])
# #plot_clade(B22phylo)
#
# Aphylo<-extract.clade(tree,ClusterNodes[ClusterNodes$cluster==16,"node"])
# #plot_clade(Aphylo)
####
#Get updated node ids for phylogroups of interest
Ccommonnode<-findMRCA(tree,Cleaves,type="node")
B1commonnode<-findMRCA(tree,subset(tree$tip.label,tree$tip.label %in% B1refined_clade$tip.label), type="node")
E2commonnode<-findMRCA(tree,E2leaves,type="node")
E1commonnode<-findMRCA(tree,subset(tree$tip.label,tree$tip.label %in% E1refined_clade$tip.label), type="node")
ClustersRefined<-data.frame(node=c(Ccommonnode,B1commonnode,
E2commonnode,E1commonnode,
ClusterNodes[ClusterNodes$cluster==10,"node"],
ClusterNodes[ClusterNodes$cluster==9,"node"],
ClusterNodes[ClusterNodes$cluster==16,"node"]),
cluster = c("C","B1","E2","E1","B2-1","B2-2","A"))
#####get sets of tips for major phylogroups
MajorPhyloTips<-data.frame(phylo=c(rep("A",length(Aphylo$tip.label)),
rep("B1",length(B1refined_clade$tip.label)),
rep("B21",length(B21phylo$tip.label)),
rep("B22",length(B22phylo$tip.label)),
rep("E1",length(E1refined_clade$tip.label)),
rep("E2",length(E2clade$tip.label)),
rep("C",length(Cclade$tip.label))),
genome=c(Aphylo$tip.label,
B1refined_clade$tip.label,
B21phylo$tip.label,
B22phylo$tip.label,
E1refined_clade$tip.label,
E2clade$tip.label,
Cclade$tip.label))
#Other important clades
B21phylo<-extract.clade(tree,ClusterNodes[ClusterNodes$cluster==10,"node"])
#plot_clade(B21phylo)
B22phylo<-extract.clade(tree,ClusterNodes[ClusterNodes$cluster==9,"node"])
#plot_clade(B22phylo)
Aphylo<-extract.clade(tree,ClusterNodes[ClusterNodes$cluster==16,"node"])
#plot_clade(Aphylo)
####
#Get updated node ids for phylogroups of interest
Ccommonnode<-findMRCA(tree,Cleaves,type="node")
B1commonnode<-findMRCA(tree,subset(tree$tip.label,tree$tip.label %in% B1refined_clade$tip.label), type="node")
E2commonnode<-findMRCA(tree,E2leaves,type="node")
E1commonnode<-findMRCA(tree,subset(tree$tip.label,tree$tip.label %in% E1refined_clade$tip.label), type="node")
ClustersRefined<-data.frame(node=c(Ccommonnode,B1commonnode,
E2commonnode,E1commonnode,
ClusterNodes[ClusterNodes$cluster==10,"node"],
ClusterNodes[ClusterNodes$cluster==9,"node"],
ClusterNodes[ClusterNodes$cluster==16,"node"]),
cluster = c("C","B1","E2","E1","B2-1","B2-2","A"))
MajorPhyloTips<-data.frame(phylo=c(rep("A",length(Aphylo$tip.label)),
rep("B1",length(B1refined_clade$tip.label)),
rep("B21",length(B21phylo$tip.label)),
rep("B22",length(B22phylo$tip.label)),
rep("E1",length(E1refined_clade$tip.label)),
rep("E2",length(E2clade$tip.label)),
rep("C",length(Cclade$tip.label))),
genome=c(Aphylo$tip.label,
B1refined_clade$tip.label,
B21phylo$tip.label,
B22phylo$tip.label,
E1refined_clade$tip.label,
E2clade$tip.label,
Cclade$tip.label))
Ecoli26kDefensedata<-read.csv("./data/ecoli_filtered.csv", header = T)
Ecoli26kDefensedataFiltered<-subset(Ecoli26kDefensedata,
Ecoli26kDefensedata$genome %in% newtipnames)
Ecoli26kDefensedataFiltered$location<-ifelse(Ecoli26kDefensedataFiltered$prophage_within=="full",
paste("prophage",Ecoli26kDefensedataFiltered$seqid_type),
Ecoli26kDefensedataFiltered$seqid_type)
EcoliDefenseFiltRestructured<-Ecoli26kDefensedataFiltered %>% group_by(genome,location)%>%
summarise(SysCount=n())
table(Ecoli26kDefensedataFiltered$location)
DrawSubsample<-function(genomes)
{
EcoliDefenseSubsample<-subset(Ecoli26kDefensedataFiltered, Ecoli26kDefensedataFiltered$genome %in% genomes)
EcoliDefenseSubsampleRestr<-EcoliDefenseSubsample %>% group_by(genome,location)%>%
summarise(syscount=n())
EcolidefenseSubPhylo<-subset(MajorPhyloTips,
MajorPhyloTips$genome %in% EcoliDefenseSubsampleRestr$genome)[,c(2,1)]
subtree<-get_subtree_with_tips(tree, only_tips = genomes)$subtree
#Plot
TreeSubsample<-ggtree(subtree, layout = 'circular', open.angle=5,
size=0.15) %<+% EcolidefenseSubPhylo +
geom_tippoint(aes(color = phylo),
size =1, show.legend = T) +
scale_color_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a","#ffff99","#b15928",
"#000000"))+
geom_treescale(y=2, x=0.02, fontsize=2.5, linesize=0.7, offset=1.3)+
guides(color = guide_legend(override.aes = list(size=8)))
TreeSubsample
##
TreeSubsampleDefSys<-TreeSubsample +
geom_fruit(data=EcoliDefenseSubsampleRestr,
geom=geom_bar,
mapping=aes(y=genome,
x=syscount,
fill=location),
orientation="y",
stat="identity",
axis.params=list(
axis       = "x",
text.size  = 1.8,
hjust      = 1,
vjust      = 0.5,
nbreak     = 3,
),
offset = 0.04,
pwidth=0.5) +
scale_fill_manual(values=c("#742c24",
"#ebddd3",
"#ba4535",
"#88727b",
"#feb24c",
"#ffeda0")) +
theme(legend.position = "right",
plot.margin = unit(c(0,0,0,0), "mm"))
return(TreeSubsampleDefSys)
}
#Do 750 random genomes
GenomeSubsample<-sample(unique(EcoliDefenseFiltRestructured$genome),750)
Treesub750<-DrawSubsample(GenomeSubsample)
Treesub750
ggsave("../figures/Ecoli_phylogenetic_trees/Ecoli_tree_with_phylogroups_and_DefSystems_20240119_subsample750.png",
plot=Treesub750, width = 35, height=35, units = "cm", dpi=300)
ggsave("../figures/Ecoli_phylogenetic_trees/Ecoli_tree_with_phylogroups_and_DefSystems_20240119_subsample750.svg",
plot=Treesub750, width = 35, height=35, units = "cm", dpi=300)
##Plot only for complete genomes
AssemblySummaryFilteredComplete<-subset(AssemblySummaryFiltered,
AssemblySummaryFiltered$release_type == "Complete Genome")
CompleteSubsample<-sample(AssemblySummaryFilteredComplete$assembly_accession, 750)
TreeCompl750<-DrawSubsample(CompleteSubsample)
TreeCompl750
ggsave("../figures/Ecoli_phylogenetic_trees/Ecoli_tree_with_phylogroups_and_DefSystems_20240119_Complete750.png",
plot=TreeCompl750, width = 35, height=35, units = "cm", dpi=300)
ggsave("../figures/Ecoli_phylogenetic_trees/Ecoli_tree_with_phylogroups_and_DefSystems_20240119_Complete750.svg",
plot=TreeCompl750, width = 35, height=35, units = "cm", dpi=300)
ggsave("./figures/Ecoli_phylogenetic_trees/Ecoli_tree_with_phylogroups_and_DefSystems_20240119_subsample750.png",
plot=Treesub750, width = 35, height=35, units = "cm", dpi=300)
ggsave("./figures/Ecoli_phylogenetic_trees/Ecoli_tree_with_phylogroups_and_DefSystems_20240119_subsample750.svg",
plot=Treesub750, width = 35, height=35, units = "cm", dpi=300)
ggsave("./figures/Ecoli_phylogenetic_trees/Ecoli_tree_with_phylogroups_and_DefSystems_20240119_Complete750.png",
plot=TreeCompl750, width = 35, height=35, units = "cm", dpi=300)
ggsave("./figures/Ecoli_phylogenetic_trees/Ecoli_tree_with_phylogroups_and_DefSystems_20240119_Complete750.svg",
plot=TreeCompl750, width = 35, height=35, units = "cm", dpi=300)
library(phytools)
library(stringr)
library(dplyr)
library(tidyr)
library(castor)
library(ggplot2)
library(ggpubr)
library(writexl)
#setwd("../")
folderwithmatrices<-"../20240114_recalculate_pagel/pagel_ecoli/"
# #merge p-values together and write to the local folder
# system(paste("cat ",folderwithmatrices,"/*.txt > ./data/Ecoli_pagel_fitDiscrete_all.tsv", sep=""))
#######################
#Open file with pagel p-values
pvaluecutoff<-0.01
#Read in the data
PagelResults<-read.csv("./data/Ecoli_pagel_fitDiscrete_all.tsv", header =F, sep="\t", fill =T,
col.names = paste0("V",seq_len(5)))
#####read counts data in order to check results stability
EcoliDefence<-read.csv("./data/ecoli_filtered.csv", header = T)
DefenceBySystem<-EcoliDefence %>% group_by(genome,immune_system) %>%
count(immune_system)
DefenceBySystemWide<-as.data.frame(DefenceBySystem %>%
pivot_wider(names_from = genome, values_from = n))
#filter
tree <- read.tree("./data/Ecoli_tree_rapidnj.rM2.treeshrink_corrected.nwk")
###do proper names on the tree that match the data
newtipnames<-tree$tip.label
rep_str = c("'"='','.fna'='')
newtipnames<-str_replace_all(newtipnames,rep_str)
DefenceBySystemWideFiltered<-DefenceBySystemWide[, colnames(DefenceBySystemWide) %in% newtipnames]
View(DefenceBySystemWideFiltered)
DefenceBySystemWideBinary<-DefenceBySystemWideFiltered
DefenceBySystemWideBinary[is.na(DefenceBySystemWideBinary)]<-0
DefenceBySystemWideBinary[DefenceBySystemWideBinary>0]<-1
DefenceBySystemWideBinary$sum<-rowSums(DefenceBySystemWideBinary)
DefenceBySystemWideBinary$System<-DefenceBySystemWide$immune_system
View(DefenceBySystemWideBinary)
subset(DefenceBySystemWideBinary, DefenceBySystemWideBinary$System %in% c("Mokosh II", "RMIV"))
MIIRIVDf<-t(subset(DefenceBySystemWideBinary, DefenceBySystemWideBinary$System %in% c("Mokosh II", "RM IV")))
MIIRIVDf<-as.data.frame(t(subset(DefenceBySystemWideBinary,
DefenceBySystemWideBinary$System %in% c("Mokosh II", "RM IV"))))
View(MIIRIVDf)
MIIRIVDfF<-subset(MIIRIVDf, MIIRIVDf$`6` == 1 & MIIRIVDf$`26` ==1)
sum(MIIRIVDf$`6`)
MIIRIVDf$`6`
sum(as.integer(MIIRIVDf$`6`))
View(DefenceBySystemWideBinary)
ZIIDIIIDf<-as.data.frame(t(subset(DefenceBySystemWideBinary,
DefenceBySystemWideBinary$System %in% c("Zorya II", "Druatia III"))))
ZIIDIIIDf<-as.data.frame(t(subset(DefenceBySystemWideBinary,
DefenceBySystemWideBinary$System %in% c("Zorya II", "Druantia III"))))
ZIIDIIIDfF<-subset(ZIIDIIIDf, ZIIDIIIDf$`7` == 1 & ZIIDIIIDf$`9` ==1)
View(DefenceBySystem)
DefenceBySystem %>% group_by(immune_system) %>% summarise_all(num=sum(n))
DefenceBySystem %>% group_by(immune_system) %>% summarise_all(sum(n))
DefenceBySystem %>% group_by(immune_system) %>% summarise(sum(n))
tmp<-DefenceBySystem %>% group_by(immune_system) %>% summarise(sum(n))
View(tmp)
library(readxl)
read_excel("./data/Table_S1_defence_occurrence_in_datasets.xlsx", sheet =1)
sheet<-1
name<-"ecoli"
SheetDf<-read_excel("./data/Table_S1_defence_occurrence_in_datasets.xlsx", sheet=sheet)
write.table(SheetDf, file =paste0("./data/",name,"_filtered.csv"),
quote=F, sep=",", row.names = F)
library(readxl)
read_supplementary_table_S1_and_save_csv<-function(sheet, name)
{
SheetDf<-read_excel("./data/Table_S1_defence_occurrence_in_datasets.xlsx", sheet=sheet)
write.table(SheetDf, file =paste0("./data/",name,"_filtered.csv"),
quote=F, sep=",", row.names = F)
}
##
read_supplementary_table_S1_and_save_csv(1,"ecoli")
read_supplementary_table_S1_and_save_csv(2,"baci")
read_supplementary_table_S1_and_save_csv(3,"burk")
read_supplementary_table_S1_and_save_csv(4,"enter")
read_supplementary_table_S1_and_save_csv(5,"pseu")
