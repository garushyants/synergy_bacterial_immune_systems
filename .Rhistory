DependentMatrixFile<-read.csv(depmatrixfile)
DependentMatrix<-(DependentMatrixFile[,c(2:5)]) %>% mutate_if(is.numeric, round, digits=4)
#calculate normalized ratios
# ratios<-c((DependentMatrix[2,4]-DependentMatrix[1,3])/DependentMatrix[2,4],
#           (DependentMatrix[4,2]-DependentMatrix[3,1])/DependentMatrix[4,2],
#           (DependentMatrix[3,4]-DependentMatrix[1,2])/DependentMatrix[3,4],
#           (DependentMatrix[4,3]-DependentMatrix[2,1])/DependentMatrix[4,3])
ratio<-function(v1,v2){
smallvalue<-0.00000001
v1*(v2+smallvalue)/(v2*v2+smallvalue)
}
ratios<-c(ratio(DependentMatrix[2,4],DependentMatrix[4,2]),
ratio(DependentMatrix[1,3],DependentMatrix[3,1]),
ratio(DependentMatrix[3,4],DependentMatrix[4,3]),
ratio(DependentMatrix[1,2],DependentMatrix[2,1]))
direction<-ifelse((ratios[2] + ratios[4]) > (ratios[1]+ratios[3]),-1,1)
taskoutdf<-data.frame(rank=j,ratios[1], ratios[2], ratios[3], ratios[4],direction)
DirectionDf<-rbind(DirectionDf,taskoutdf)
}
else
{
print(j)
}
}
library(phytools)
library(stringr)
library(dplyr)
library(tidyr)
library(castor)
library(ggplot2)
library(ggpubr)
library(writexl)
setwd("../")
folderwithmatrices<-"./data/Ecoli_pagel_fitDiscrete/"
#merge p-values together and write to the local folder
system(paste("cat ",folderwithmatrices,"/*.txt > ./data/Ecoli_pagel_fitDiscrete.tsv", sep=""))
setwd("/net/intdev/cbb01/garushyants/defence_systems_cooccurance/github/scripts")
setwd("../")
folderwithmatrices<-"./data/Ecoli_pagel_fitDiscrete/"
#merge p-values together and write to the local folder
system(paste("cat ",folderwithmatrices,"/*.txt > ./data/Ecoli_pagel_fitDiscrete_all.tsv", sep=""))
#######################
#Open file with pagel p-values
pvaluecutoff<-0.01
#Read in the data
PagelResults<-read.csv("./data/Ecoli_pagel_fitDiscrete_all.tsv", header =F, sep="\t", fill =T,
col.names = paste0("V",seq_len(5)))
View(PagelResults)
PreCount<-merge(PagelResultsSorted,DefenseCounts, by.x = "System.I", by.y = "System")
colnames(PreCount)[9]<-"Sum.System.I"
PagelResultsSortedCounts<-merge(PreCount, DefenseCounts, by.x ="System.II", by.y ="System")
colnames(PagelResultsSortedCounts)[10]<-"Sum.System.II"
#
#select only once that are somehow significant
PagelResultsSignifCounts<-subset(PagelResultsSortedCounts,PagelResultsSortedCounts$Pagel.p.value<pvaluecutoff)
View(PagelResultsSignifCounts)
for (j in PagelResultsSignifCounts$rank)
{
task<-PagelResultsSignifCounts[PagelResultsSignifCounts$rank==j,]
#most probable model
bestmodel<-which.min(task[3:5])
prefix<-ifelse(bestmodel == 1, paste(task$System.I,"_",task$System.II, sep=""),
ifelse(bestmodel == 2, paste(task$System.I,"_",task$System.II,"_",task$System.I, sep=""),
paste(task$System.I,"_",task$System.II,"_",task$System.II, sep="")))
#prefix<-paste(task$System.I,"_",task$System.II, sep="")
depmatrixfile<-paste(folderwithmatrices,"/",paste(task$System.I,"_",task$System.II, sep=""),"/",
prefix,"_dependent.matrix", sep="")
if (file.exists(depmatrixfile))
{
DependentMatrixFile<-read.csv(depmatrixfile)
DependentMatrix<-(DependentMatrixFile[,c(2:5)]) %>% mutate_if(is.numeric, round, digits=4)
ratio<-function(v1,v2){
smallvalue<-0.00000001
v1*(v2+smallvalue)/(v2*v2+smallvalue)
}
ratios<-c(ratio(DependentMatrix[2,4],DependentMatrix[4,2]),
ratio(DependentMatrix[1,3],DependentMatrix[3,1]),
ratio(DependentMatrix[3,4],DependentMatrix[4,3]),
ratio(DependentMatrix[1,2],DependentMatrix[2,1]))
direction<-ifelse((ratios[2] + ratios[4]) > (ratios[1]+ratios[3]),-1,1)
taskoutdf<-data.frame(rank=j,ratios[1], ratios[2], ratios[3], ratios[4],direction)
DirectionDf<-rbind(DirectionDf,taskoutdf)
}
else
{
print(j)
}
}
#write results to Excel table
ExcelDf<-merge(PagelResultsSortedCounts,DirectionDf, by="rank",all.x=T)
View(PagelResultsSortedCounts)
View(PagelResultsSortedCounts)
View(PagelResultsSignifCounts)
folderwithmatrices<-"../20230209_rerun_pagel_Ecoli/pagel_fitDiscrete/"
DirectionDf<-data.frame(rank=NULL,direction=NULL)
#add transitions
for (j in PagelResultsSignifCounts$rank)
{
task<-PagelResultsSignifCounts[PagelResultsSignifCounts$rank==j,]
#most probable model
bestmodel<-which.min(task[3:5])
prefix<-ifelse(bestmodel == 1, paste(task$System.I,"_",task$System.II, sep=""),
ifelse(bestmodel == 2, paste(task$System.I,"_",task$System.II,"_",task$System.I, sep=""),
paste(task$System.I,"_",task$System.II,"_",task$System.II, sep="")))
#prefix<-paste(task$System.I,"_",task$System.II, sep="")
depmatrixfile<-paste(folderwithmatrices,"/",paste(task$System.I,"_",task$System.II, sep=""),"/",
prefix,"_dependent.matrix", sep="")
if (file.exists(depmatrixfile))
{
DependentMatrixFile<-read.csv(depmatrixfile)
DependentMatrix<-(DependentMatrixFile[,c(2:5)]) %>% mutate_if(is.numeric, round, digits=4)
ratio<-function(v1,v2){
smallvalue<-0.00000001
v1*(v2+smallvalue)/(v2*v2+smallvalue)
}
ratios<-c(ratio(DependentMatrix[2,4],DependentMatrix[4,2]),
ratio(DependentMatrix[1,3],DependentMatrix[3,1]),
ratio(DependentMatrix[3,4],DependentMatrix[4,3]),
ratio(DependentMatrix[1,2],DependentMatrix[2,1]))
direction<-ifelse((ratios[2] + ratios[4]) > (ratios[1]+ratios[3]),-1,1)
taskoutdf<-data.frame(rank=j,ratios[1], ratios[2], ratios[3], ratios[4],direction)
DirectionDf<-rbind(DirectionDf,taskoutdf)
}
else
{
print(j)
}
}
#write results to Excel table
ExcelDf<-merge(PagelResultsSortedCounts,DirectionDf, by="rank",all.x=T)
View(ExcelDf)
write_xlsx(ExcelDf,"./data/Ecoli_pagel_all_results_with_direction.xlsx")
PagelResultsDirectionF<-as.data.frame(merge(PagelResultsSignifCounts,DirectionDf, by="rank"))
#do symmetric
PagelResultsSymHalf1<-PagelResultsDirectionF
PagelResultsSymHalf2<-PagelResultsDirectionF
colnames(PagelResultsSymHalf2)[2:3]<-c("System.I","System.II")
PagelResultsSym<-rbind(PagelResultsSymHalf1,PagelResultsSymHalf2)
#do full
PagelWide<-as.data.frame(pivot_wider(PagelResultsSym[,c(2,3,15)],names_from = System.II, values_from = direction))
PagelWideSortedRow<-PagelWide[order(PagelWide$System.I),]
PagelWideSorted<-PagelWideSortedRow[,c(2:(length(SystemsToKeep)+1))]%>%
select(order(colnames(PagelWideSortedRow[,c(2:(length(SystemsToKeep)+1))])))
rownames(PagelWideSorted)<-PagelWideSortedRow$System.I
#do triangles
Positive<-PagelWideSorted %>% mutate(across(everything(), function(x){replace(x, which(x==-1), NA)}))
Negative<-PagelWideSorted %>% mutate(across(everything(), function(x){replace(x, which(x==1), NA)}))
Posmat<-as.matrix(Positive)
Posmat<-replace(Posmat, is.na(Posmat),0)
Negmat<-as.matrix(Negative)
Negmat<-replace(Negmat, is.na(Negmat),0)
CombinedMat <- matrix(NA, nrow = length(SystemsToKeep), ncol = length(SystemsToKeep))
CombinedMat[upper.tri(CombinedMat)] <- Posmat[upper.tri(Posmat)]
CombinedMat[lower.tri(CombinedMat)] <- Negmat[lower.tri(Negmat)]
PagelWideTri<-as.data.frame(CombinedMat)
colnames(PagelWideTri)<-colnames(PagelWideSorted)
PagelWideTri$System.I<-rownames(PagelWideSorted)
#back to long
PreResultsToPlot<-PagelWideTri %>%
pivot_longer(!System.I, names_to="System.II", values_to = "direction")
ResultsToPlot<-merge(PreResultsToPlot,PagelResultsSym, by=c("System.I","System.II","direction"),
all.x=T)
ResultsToPlot$Signif<-ifelse(ResultsToPlot$Bonferroni == "Y","**",
ifelse(ResultsToPlot$Benjamini.Hochberg == "Y","*",""))
View(ResultsToPlot)
###New added piece (2023/04/03), color labels by class
AllClass<-unique(EcoliDefence[,c("defense_system","class")])
AllClassFiltered<-subset(AllClass,AllClass$defense_system %in% rownames(PagelWideSorted))
ColorsToClasses<-data.frame(class=unique(AllClassFiltered$class),
colors=c("#1b9e77","#d95f02","#7570b3",
"#000000","#e7298a","#a6761d","#e6ab02"))
AllClassFilteredCol<-merge(AllClassFiltered,ColorsToClasses, by="class")
AllClassFilteredColSorted<-AllClassFilteredCol[order(AllClassFilteredCol$defense_system),]
View(DefenseCounts)
View(PagelResultsSorted)
View(PagelResultsSignifCounts)
View(PagelResultsSortedCounts)
DefenseCounts[order(DefenseCounts$sum)]
DefenseCounts[,order(DefenseCounts$sum)]
DefenseCounts[order(DefenseCounts$sum),]
ResultsToPlot$System.I<-factor(ResultsToPlot$System.I,levels=SystemOrder)
SystemOrder<-DefenseCounts[order(DefenseCounts$sum),]$system
ResultsToPlot$System.I<-factor(ResultsToPlot$System.I,levels=SystemOrder)
ResultsToPlot$System.II<-factor(ResultsToPlot$System.II,levels=SystemOrder)
heatmap<-ggplot(data = ResultsToPlot, aes(System.I,System.II))+
geom_tile(color = "#d9d9d9",
aes(fill = direction,
alpha = 1-Pagel.p.value))+
geom_text(aes(label=Signif),
size=4,
color="white",
vjust=0.8,
hjust=0.5,
inherit.aes = TRUE)+
guides(alpha="none")+
theme_classic()+
scale_fill_gradient2(high= "#bf812d", mid="white", low="#35978f", name ="Co-occurence",
labels= c("Mutually exclusive","","Neutral","","Co-occuring"))+
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5,
color = AllClassFilteredColSorted$colors,
size=12),
axis.text.y = element_text(color = AllClassFilteredColSorted$colors,
size=12),
axis.title = element_blank(),
legend.key.size = unit(0.5, 'cm'))
heatmap
View(ResultsToPlot)
ResultsToPlot<-merge(PreResultsToPlot,PagelResultsSym, by=c("System.I","System.II","direction"),
all.x=T)
ResultsToPlot$Signif<-ifelse(ResultsToPlot$Bonferroni == "Y","**",
ifelse(ResultsToPlot$Benjamini.Hochberg == "Y","*",""))
factor(ResultsToPlot$System.I,levels=SystemOrder)
as.factor(ResultsToPlot$System.I,levels=SystemOrder)
SystemOrder<-DefenseCounts[order(DefenseCounts$sum),]$system
SystemOrderDf<-subset(DefenseCounts, DefenseCounts$System %in% SystemsToKeep)
SystemOrderDf[order(SystemOrderDf$sum),]$System
SystemOrder<-SystemOrderDf[order(SystemOrderDf$sum),]$System
actor(ResultsToPlot$System.II,levels=SystemOrder)
factor(ResultsToPlot$System.II,levels=SystemOrder)
ResultsToPlot$System.I<-factor(ResultsToPlot$System.I,levels=SystemOrder)
ResultsToPlot$System.II<-factor(ResultsToPlot$System.II,levels=SystemOrder)
####
#Plot results
heatmap<-ggplot(data = ResultsToPlot, aes(System.I,System.II))+
geom_tile(color = "#d9d9d9",
aes(fill = direction,
alpha = 1-Pagel.p.value))+
geom_text(aes(label=Signif),
size=4,
color="white",
vjust=0.8,
hjust=0.5,
inherit.aes = TRUE)+
guides(alpha="none")+
theme_classic()+
scale_fill_gradient2(high= "#bf812d", mid="white", low="#35978f", name ="Co-occurence",
labels= c("Mutually exclusive","","Neutral","","Co-occuring"))+
#scale_x_discrete(limits = SystemOrder)
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5,
color = AllClassFilteredColSorted$colors,
size=12),
axis.text.y = element_text(color = AllClassFilteredColSorted$colors,
size=12),
axis.title = element_blank(),
legend.key.size = unit(0.5, 'cm'))
heatmap
View(PagelResultsDirectionF)
View(PagelResultsSym)
View(PagelWideSorted)
View(PagelWideSorted)
View(PagelWideSortedRow)
PagelWideSortedRow<-PagelWide[order(match(PagelWide$System.I,SystemOrder)),]
View(PagelWideSorted)
View(PagelWideSortedRow)
PagelWideSorted<-PagelWideSortedRow[,c(2:(length(SystemsToKeep)+1))]%>%
select(order(colnames(PagelWideSortedRow[,c(2:(length(SystemsToKeep)+1))])))
rownames(PagelWideSorted)<-PagelWideSortedRow$System.I
View(PagelWideSorted)
PagelWideSorted<-PagelWideSortedRow[,c(2:(length(SystemsToKeep)+1))]%>%
select(order(match(colnames(PagelWideSortedRow[,c(2:(length(SystemsToKeep)+1))]),SystemOrder)))
rownames(PagelWideSorted)<-PagelWideSortedRow$System.I
View(PagelWideSorted)
#do triangles
Positive<-PagelWideSorted %>% mutate(across(everything(), function(x){replace(x, which(x==-1), NA)}))
Negative<-PagelWideSorted %>% mutate(across(everything(), function(x){replace(x, which(x==1), NA)}))
Posmat<-as.matrix(Positive)
Posmat<-replace(Posmat, is.na(Posmat),0)
Negmat<-as.matrix(Negative)
Negmat<-replace(Negmat, is.na(Negmat),0)
CombinedMat <- matrix(NA, nrow = length(SystemsToKeep), ncol = length(SystemsToKeep))
CombinedMat[upper.tri(CombinedMat)] <- Posmat[upper.tri(Posmat)]
CombinedMat[lower.tri(CombinedMat)] <- Negmat[lower.tri(Negmat)]
##back to df
PagelWideTri<-as.data.frame(CombinedMat)
colnames(PagelWideTri)<-colnames(PagelWideSorted)
PagelWideTri$System.I<-rownames(PagelWideSorted)
#back to long
PreResultsToPlot<-PagelWideTri %>%
pivot_longer(!System.I, names_to="System.II", values_to = "direction")
ResultsToPlot<-merge(PreResultsToPlot,PagelResultsSym, by=c("System.I","System.II","direction"),
all.x=T)
ResultsToPlot$Signif<-ifelse(ResultsToPlot$Bonferroni == "Y","**",
ifelse(ResultsToPlot$Benjamini.Hochberg == "Y","*",""))
#######
###New added piece (2023/04/03), color labels by class
AllClass<-unique(EcoliDefence[,c("defense_system","class")])
AllClassFiltered<-subset(AllClass,AllClass$defense_system %in% rownames(PagelWideSorted))
ColorsToClasses<-data.frame(class=unique(AllClassFiltered$class),
colors=c("#1b9e77","#d95f02","#7570b3",
"#000000","#e7298a","#a6761d","#e6ab02"))
AllClassFilteredCol<-merge(AllClassFiltered,ColorsToClasses, by="class")
AllClassFilteredColSorted<-AllClassFilteredCol[order(AllClassFilteredCol$defense_system),]
#Order labels by abundance
ResultsToPlot$System.I<-factor(ResultsToPlot$System.I,levels=SystemOrder)
ResultsToPlot$System.II<-factor(ResultsToPlot$System.II,levels=SystemOrder)
heatmap<-ggplot(data = ResultsToPlot, aes(System.I,System.II))+
geom_tile(color = "#d9d9d9",
aes(fill = direction,
alpha = 1-Pagel.p.value))+
geom_text(aes(label=Signif),
size=4,
color="white",
vjust=0.8,
hjust=0.5,
inherit.aes = TRUE)+
guides(alpha="none")+
theme_classic()+
scale_fill_gradient2(high= "#bf812d", mid="white", low="#35978f", name ="Co-occurence",
labels= c("Mutually exclusive","","Neutral","","Co-occuring"))+
#scale_x_discrete(limits = SystemOrder)
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5,
color = AllClassFilteredColSorted$colors,
size=12),
axis.text.y = element_text(color = AllClassFilteredColSorted$colors,
size=12),
axis.title = element_blank(),
legend.key.size = unit(0.5, 'cm'))
heatmap
SystemOrderDf[-order(SystemOrderDf$sum),]$System
SystemOrderDf[order(-SystemOrderDf$sum),]$System
SystemOrder<-SystemOrderDf[order(-SystemOrderDf$sum),]$System
#do symmetric
PagelResultsSymHalf1<-PagelResultsDirectionF
PagelResultsSymHalf2<-PagelResultsDirectionF
colnames(PagelResultsSymHalf2)[2:3]<-c("System.I","System.II")
PagelResultsSym<-rbind(PagelResultsSymHalf1,PagelResultsSymHalf2)
#do full
PagelWide<-as.data.frame(pivot_wider(PagelResultsSym[,c(2,3,15)],names_from = System.II, values_from = direction))
PagelWideSortedRow<-PagelWide[order(match(PagelWide$System.I,SystemOrder)),]
PagelWideSorted<-PagelWideSortedRow[,c(2:(length(SystemsToKeep)+1))]%>%
select(order(match(colnames(PagelWideSortedRow[,c(2:(length(SystemsToKeep)+1))]),SystemOrder)))
rownames(PagelWideSorted)<-PagelWideSortedRow$System.I
# PagelWideSortedRow<-PagelWide[order(PagelWide$System.I),]
# PagelWideSorted<-PagelWideSortedRow[,c(2:(length(SystemsToKeep)+1))]%>%
#   select(order(colnames(PagelWideSortedRow[,c(2:(length(SystemsToKeep)+1))])))
# rownames(PagelWideSorted)<-PagelWideSortedRow$System.I
#do triangles
Positive<-PagelWideSorted %>% mutate(across(everything(), function(x){replace(x, which(x==-1), NA)}))
Negative<-PagelWideSorted %>% mutate(across(everything(), function(x){replace(x, which(x==1), NA)}))
Posmat<-as.matrix(Positive)
Posmat<-replace(Posmat, is.na(Posmat),0)
Negmat<-as.matrix(Negative)
Negmat<-replace(Negmat, is.na(Negmat),0)
CombinedMat <- matrix(NA, nrow = length(SystemsToKeep), ncol = length(SystemsToKeep))
CombinedMat[upper.tri(CombinedMat)] <- Posmat[upper.tri(Posmat)]
CombinedMat[lower.tri(CombinedMat)] <- Negmat[lower.tri(Negmat)]
##back to df
PagelWideTri<-as.data.frame(CombinedMat)
colnames(PagelWideTri)<-colnames(PagelWideSorted)
PagelWideTri$System.I<-rownames(PagelWideSorted)
#back to long
PreResultsToPlot<-PagelWideTri %>%
pivot_longer(!System.I, names_to="System.II", values_to = "direction")
ResultsToPlot<-merge(PreResultsToPlot,PagelResultsSym, by=c("System.I","System.II","direction"),
all.x=T)
ResultsToPlot$Signif<-ifelse(ResultsToPlot$Bonferroni == "Y","**",
ifelse(ResultsToPlot$Benjamini.Hochberg == "Y","*",""))
#######
###New added piece (2023/04/03), color labels by class
AllClass<-unique(EcoliDefence[,c("defense_system","class")])
AllClassFiltered<-subset(AllClass,AllClass$defense_system %in% rownames(PagelWideSorted))
ColorsToClasses<-data.frame(class=unique(AllClassFiltered$class),
colors=c("#1b9e77","#d95f02","#7570b3",
"#000000","#e7298a","#a6761d","#e6ab02"))
AllClassFilteredCol<-merge(AllClassFiltered,ColorsToClasses, by="class")
AllClassFilteredColSorted<-AllClassFilteredCol[order(AllClassFilteredCol$defense_system),]
#Order labels by abundance
ResultsToPlot$System.I<-factor(ResultsToPlot$System.I,levels=SystemOrder)
ResultsToPlot$System.II<-factor(ResultsToPlot$System.II,levels=SystemOrder)
####
#Plot results
heatmap<-ggplot(data = ResultsToPlot, aes(System.I,System.II))+
geom_tile(color = "#d9d9d9",
aes(fill = direction,
alpha = 1-Pagel.p.value))+
geom_text(aes(label=Signif),
size=4,
color="white",
vjust=0.8,
hjust=0.5,
inherit.aes = TRUE)+
guides(alpha="none")+
theme_classic()+
scale_fill_gradient2(high= "#bf812d", mid="white", low="#35978f", name ="Co-occurence",
labels= c("Mutually exclusive","","Neutral","","Co-occuring"))+
#scale_x_discrete(limits = SystemOrder)
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5,
color = AllClassFilteredColSorted$colors,
size=12),
axis.text.y = element_text(color = AllClassFilteredColSorted$colors,
size=12),
axis.title = element_blank(),
legend.key.size = unit(0.5, 'cm'))
heatmap
ggsave("./figures/Ecoli_pagel_heatmap_pagel_0.005.png", plot= heatmap,
height = 31, width =35, units ="cm", dpi=200)
ggsave("./figures/Ecoli_pagel_heatmap_pagel_0.005.svg", plot= heatmap,
height = 31, width =35, units ="cm", dpi=200)
AllClassFilteredColSorted<-AllClassFilteredCol[order(match(AllClassFilteredCol$defense_system,SystemOrder)),]
#Order labels by abundance
ResultsToPlot$System.I<-factor(ResultsToPlot$System.I,levels=SystemOrder)
ResultsToPlot$System.II<-factor(ResultsToPlot$System.II,levels=SystemOrder)
####
#Plot results
heatmap<-ggplot(data = ResultsToPlot, aes(System.I,System.II))+
geom_tile(color = "#d9d9d9",
aes(fill = direction,
alpha = 1-Pagel.p.value))+
geom_text(aes(label=Signif),
size=4,
color="white",
vjust=0.8,
hjust=0.5,
inherit.aes = TRUE)+
guides(alpha="none")+
theme_classic()+
scale_fill_gradient2(high= "#bf812d", mid="white", low="#35978f", name ="Co-occurence",
labels= c("Mutually exclusive","","Neutral","","Co-occuring"))+
#scale_x_discrete(limits = SystemOrder)
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5,
color = AllClassFilteredColSorted$colors,
size=12),
axis.text.y = element_text(color = AllClassFilteredColSorted$colors,
size=12),
axis.title = element_blank(),
legend.key.size = unit(0.5, 'cm'))
heatmap
ggsave("./figures/Ecoli_pagel_heatmap_pagel_0.005.png", plot= heatmap,
height = 31, width =35, units ="cm", dpi=200)
ggsave("./figures/Ecoli_pagel_heatmap_pagel_0.005.svg", plot= heatmap,
height = 31, width =35, units ="cm", dpi=200)
heatmap<-ggplot(data = ResultsToPlot, aes(System.I,System.II))+
geom_tile(color = "#d9d9d9",
aes(fill = direction,
alpha = 1-Pagel.p.value))+
geom_text(aes(label=Signif),
size=4,
color="white",
vjust=0.8,
hjust=0.5,
inherit.aes = TRUE)+
guides(alpha="none")+
theme_classic()+
scale_fill_gradient2(high= "#bf812d", mid="white", low="#35978f", name ="Co-occurence",
labels= c("Mutually exclusive","","","","Co-occuring"))+
#scale_x_discrete(limits = SystemOrder)
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5,
color = AllClassFilteredColSorted$colors,
size=12),
axis.text.y = element_text(color = AllClassFilteredColSorted$colors,
size=12),
axis.title = element_blank(),
legend.key.size = unit(0.5, 'cm'))
heatmap
ggsave("./figures/Ecoli_pagel_heatmap_pagel_0.005.png", plot= heatmap,
height = 31, width =35, units ="cm", dpi=200)
ggsave("./figures/Ecoli_pagel_heatmap_pagel_0.005.svg", plot= heatmap,
height = 31, width =35, units ="cm", dpi=200)
heatmap<-ggplot(data = ResultsToPlot, aes(System.I,System.II))+
geom_tile(color = "#d9d9d9",
aes(fill = direction,
alpha = 1-Pagel.p.value))+
geom_text(aes(label=Signif),
size=4,
color="white",
vjust=0.8,
hjust=0.5,
inherit.aes = TRUE)+
guides(alpha="none")+
theme_classic()+
scale_fill_gradient2(high= "#bf812d", mid="white", low="#35978f", #name ="Co-occurence",
labels= c("Mutually exclusive","","","","Co-occuring"))+
#scale_x_discrete(limits = SystemOrder)
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5,
color = AllClassFilteredColSorted$colors,
size=12),
axis.text.y = element_text(color = AllClassFilteredColSorted$colors,
size=12),
axis.title = element_blank(),
legend.key.size = unit(0.5, 'cm'))
heatmap
ggsave("./figures/Ecoli_pagel_heatmap_pagel_0.005.png", plot= heatmap,
height = 31, width =35, units ="cm", dpi=200)
ggsave("./figures/Ecoli_pagel_heatmap_pagel_0.005.svg", plot= heatmap,
height = 31, width =35, units ="cm", dpi=200)
heatmap<-ggplot(data = ResultsToPlot, aes(System.I,System.II))+
geom_tile(color = "#d9d9d9",
aes(fill = direction,
alpha = 1-Pagel.p.value))+
geom_text(aes(label=Signif),
size=4,
color="white",
vjust=0.8,
hjust=0.5,
inherit.aes = TRUE)+
guides(alpha="none")+
theme_classic()+
scale_fill_gradient2(high= "#bf812d", mid="white", low="#35978f", name="",
labels= c("Mutually exclusive","","","","Co-occuring"))+
#scale_x_discrete(limits = SystemOrder)
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=0.5,
color = AllClassFilteredColSorted$colors,
size=12),
axis.text.y = element_text(color = AllClassFilteredColSorted$colors,
size=12),
axis.title = element_blank(),
legend.key.size = unit(0.5, 'cm'))
heatmap
ggsave("./figures/Ecoli_pagel_heatmap_pagel_0.005.png", plot= heatmap,
height = 31, width =35, units ="cm", dpi=200)
ggsave("./figures/Ecoli_pagel_heatmap_pagel_0.005.svg", plot= heatmap,
height = 31, width =35, units ="cm", dpi=200)
