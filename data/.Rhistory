library(phytools)
library(stringr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(tidyr)
library(writexl)
path<-getwd()
setwd(path)
#####
#Read clades
setwd("..github/data/Ecoli_phylogroups/")
setwd("../github/data/Ecoli_phylogroups/")
treesfiles<-c("Ecoli_A.nwk","Ecoli_B1.nwk","Ecoli_B21.nwk",
"Ecoli_B22.nwk","Ecoli_C.nwk","Ecoli_E1.nwk",
"Ecoli_E2.nwk")
treenames<-c("A","B1","B21","B22","C","E1","E2")
PhyloTrees=lapply(treesfiles,read.tree)
names(PhyloTrees)<-treenames
#Read tips for clades
PhyloTips=lapply(PhyloTrees, function(x) x$tip.label)
PhyloTipsDf<-data_frame(id = names(PhyloTips), PhyloTips) %>%
unnest(cols = c(PhyloTips))
PhyloTipsVec<-PhyloTipsDf$PhyloTips
#Read weights
weightsfiles<-c("Ecoli_A_leaf_weigts.tab","Ecoli_B1_leaf_weigts.tab",
"Ecoli_B21_leaf_weigts.tab","Ecoli_B22_leaf_weigts.tab",
"Ecoli_C_leaf_weigts.tab","Ecoli_E1_leaf_weigts.tab",
"Ecoli_E2_leaf_weigts.tab")
TipWeights=lapply(weightsfiles, function(x) read.csv(x,sep="\t",header=F))
names(TipWeights)<-treenames
TipsWeightsDf<-data_frame(id = names(TipWeights), TipWeights) %>%
unnest(cols = c(TipWeights))
setwd("../")
EcoliDefense<-read.csv("26k_Ecoli_with_prophages.csv", header = T)
EcoliDefense$location<-ifelse(EcoliDefense$prophage_within=="full",
paste("prophage",EcoliDefense$seqid_type),
EcoliDefense$seqid_type)
View(EcoliDefense)
EcoliDefense$length<-EcoliDefense$end - EcoliDefense$start +1
DefenseBySystem<-EcoliDefense %>% group_by(genome,defense_system) %>%
count(defense_system)
DefenseBySystemWide<-as.data.frame(DefenseBySystem %>%
pivot_wider(names_from = defense_system, values_from = n))
DefenseBySystemWide[is.na(DefenseBySystemWide)]<-0
#filter
DefenseBySystemWideOnly7phylo<-subset(DefenseBySystemWide,
DefenseBySystemWide$genome %in% PhyloTipsVec)
#Get to binary
DefenseBinary<-DefenseBySystemWideOnly7phylo[,c(2:ncol(DefenseBySystemWideOnly7phylo))]
DefenseBinary[is.na(DefenseBinary)]<-0
DefenseBinary[DefenseBinary>0]<-1
#drop columns with cutoff
cutoff<-0.005 #the system has to be present in 0.5% of genomes
DefenseBySystem7phyloFilt<-DefenseBinary[,colSums(DefenseBinary) > cutoff*nrow(DefenseBinary)]
#get system order for vizualization
SysOrderDf<-data.frame(System=colnames(DefenseBySystem7phyloFilt[,c(1:71)]),
count=colSums(DefenseBySystem7phyloFilt[,c(1:71)]))
SystemOrder<-SysOrderDf[order(SysOrderDf$count),]$System
SysOrderDf$System<-factor(SysOrderDf$System,levels=SystemOrder)
########
#Finally can work with dataset
DefenseBySystem7phyloFilt$genome<-DefenseBySystemWideOnly7phylo$genome
DefenseBySystemWithPhylo<-merge(DefenseBySystem7phyloFilt,PhyloTipsDf, by.x="genome",
by.y = "PhyloTips")
#the same but without cutoff
DefenseBySystemWithPhyloWithoutCutoff<-merge(DefenseBySystemWideOnly7phylo,PhyloTipsDf, by.x="genome",
by.y = "PhyloTips")
#####Transform back to long
DefWithoutCutoffLong<-gather(DefenseBySystemWithPhyloWithoutCutoff,defense_system,count,
`CRISPR I-E`:`Druantia II`)
DefFiltLong<-gather(DefenseBySystemWithPhylo,defense_system,count,
`CRISPR I-E`:`Lamassu I`)
CountPerPhylogroup<-DefWithoutCutoffLong %>% group_by(id)%>%
summarise(total=length(unique(genome)))
CountSystemsPerPhylo<-DefFiltLong %>% group_by(id,defense_system)%>%
summarise(systemtotal=sum(count))
ForPlotRaw<-merge(CountSystemsPerPhylo,CountPerPhylogroup,by="id")
ForPlotRaw$perc<-ForPlotRaw$systemtotal*100/ForPlotRaw$total
ForPlotRaw$defense_system<-factor(ForPlotRaw$defense_system,
levels=SystemOrder)
LongPlotFacet<-ggplot(ForPlotRaw,aes(y=defense_system,x=perc, fill=id))+
geom_bar(stat="identity", position=position_dodge())+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"))+
scale_x_continuous(breaks=c(0,50,100))+
facet_wrap(~id,nrow=1)+
xlab("%")+
ylab("")+
theme_classic()+
theme(panel.grid.minor = element_line(linewidth = 0.2),
panel.grid.major = element_line(linewidth = 0.2),
strip.background = element_blank(),
panel.spacing = unit(1, "lines"),
legend.position = "none")
LongPlotFacet
SysOrderDf$title<-rep("# of genomes",length(SysOrderDf$count))
SystemCountPlot<-ggplot(SysOrderDf,
aes(y=System,x=-count))+
geom_bar(stat="identity", position=position_dodge())+
ylab("")+
xlab("")+
scale_x_continuous(breaks=seq(-25000,0,10000),
labels=seq(25000,0,-10000),
limits=c(-23500,5000))+
geom_text(aes(y=System, label=count), x=500, hjust=0,
size=3)+
theme_classic()+
theme(axis.text.y = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(linewidth = 0.2),
panel.grid.major.y = element_blank(),
strip.background = element_blank(),
panel.spacing = unit(1, "lines"),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none") +
facet_wrap(~title)
SystemCountPlot
View(CountPerPhylogroup)
View(CountSystemsPerPhylo)
View(DefWithoutCutoffLong)
SysPerGenomePlot<-DefWithoutCutoffLong %>% group_by(id,genome)%>%
summarise(syspergenome=sum(count))
View(SysPerGenomePlot)
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome))+
geom_density()+
geom_vline(xintercept = mean(syspergenome))+
facet_wrap(~id, nrow=1)
SysPerGenomePlot<-DefWithoutCutoffLong %>% group_by(id,genome)%>%
summarise(syspergenome=sum(count))
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome))+
geom_density()
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome))+
geom_density()+
geom_vline(xintercept = mean(syspergenome))+
facet_wrap(~id, nrow=1)
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id))+
geom_density()+
geom_vline(aes(xintercept = mean(syspergenome)))+
facet_wrap(~id, nrow=1)
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id))+
geom_density()+
geom_vline(aes(xintercept = mean(syspergenome)))+
facet_wrap(~id, ncol=1)
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id))+
geom_histogram()+
geom_vline(aes(xintercept = mean(syspergenome)))+
facet_wrap(~id, ncol=1)
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id))+
geom_histogram()+
facet_wrap(~id, ncol=1)+
geom_vline(aes(xintercept = mean(syspergenome)))
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id))+
geom_histogram(bins=10)+
facet_wrap(~id, ncol=1)+
geom_vline(aes(xintercept = mean(syspergenome)))
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id))+
geom_histogram(bins=10)+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = mean(syspergenome)))
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id))+
geom_histogram(bins=15)+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = mean(syspergenome)))
DefWithoutCutoffLong %>% group_by(id,genome)%>%
summarise(syspergenome=sum(count)) %>%
group_by(id)%>%
mutate(mean=mean(syspergenome))
DefWithoutCutoffLong %>% group_by(id,genome)%>%
summarise(syspergenome=sum(count)) %>%
group_by(id)%>%
mutate(mean=median(syspergenome))
SysPerGenomePlot<-DefWithoutCutoffLong %>% group_by(id,genome)%>%
summarise(syspergenome=sum(count)) %>%
group_by(id)%>%
mutate(median=median(syspergenome))
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id))+
geom_histogram(bins=15)+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median))
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id))+
geom_histogram(bins=15)+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median))+
theme_classic()+
scale_x_continuous(breaks=seq(1,20,1))
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id))+
geom_histogram(bins=15)+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median))+
theme_classic()+
scale_x_continuous(breaks=seq(1,20,1), limits=c(0,18))
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id))+
geom_histogram(bins=15)+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(breaks=seq(1,20,1), limits=c(0,18))
View(DefWithoutCutoffLong)
DefLengthWithoutCutoffLong<-gather(DefenseBySystemWithPhyloWithoutCutoff,defense_system,length,
`CRISPR I-E`:`Druantia II`)
View(DefLengthWithoutCutoffLong)
merge(EcoliDefense,DefWithoutCutoffLong[,c(1,2)],by="genome")
View(SysPerGenomePlot)
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id, fill=id))+
geom_histogram(bins=15)+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(breaks=seq(1,20,1), limits=c(0,18))+
xlab("Defence systems per genome")
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id, fill=id))+
geom_histogram(bins=15)+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"))+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(breaks=seq(1,20,1), limits=c(0,18))+
xlab("Defence systems per genome")
ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id, fill=id))+
geom_histogram(bins=15)+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"),
name = "")+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(breaks=seq(1,20,1), limits=c(0,18))+
xlab("Defence systems per genome")
DefLengthForPlot<-subset(EcoliDefense,
EcoliDefense$genome %in% SysPerGenomePlot$id)
View(SysPerGenomePlot)
DefLengthForPlot<-subset(EcoliDefense,
EcoliDefense$genome %in% SysPerGenomePlot$genome)
View(DefLengthForPlot)
PreDefLengthForPlot<-subset(EcoliDefense,
EcoliDefense$genome %in% SysPerGenomePlot$genome)
PreDefLengthForPlot<-subset(EcoliDefense,
EcoliDefense$genome %in% SysPerGenomePlot$genome)
DefLengthForPlot<-merge(PreDefLengthForPlot, SysPerGenomePlot[,c(1,2)], by="genome")
View(DefLengthForPlot)
EcoliDefLengthForPlot<-subset(EcoliDefense,
EcoliDefense$genome %in% SysPerGenomePlot$genome)
PreDefLengthForPlot<-merge(PreDefLengthForPlot, SysPerGenomePlot[,c(1,2)], by="genome")
PreDefLengthForPlot<-merge(PreDefLengthForPlot, SysPerGenomePlot[,c(1,2)], by="genome")
DefLengthForPlot<- PreDefLengthForPlot %>% group_by(id,genome)%>%
summarise(lengthpergenome=sum(length))%>%
group_by(id)%>%
mutate(median=median(lengthpergenoem))
EcoliDefLengthForPlot<-subset(EcoliDefense,
EcoliDefense$genome %in% SysPerGenomePlot$genome)
PreDefLengthForPlot<-merge(EcoliDefLengthForPlot, SysPerGenomePlot[,c(1,2)], by="genome")
DefLengthForPlot<- PreDefLengthForPlot %>% group_by(id,genome)%>%
summarise(lengthpergenome=sum(length))%>%
group_by(id)%>%
mutate(median=median(lengthpergenoem))
DefLengthForPlot<- PreDefLengthForPlot %>% group_by(id,genome)%>%
summarise(lengthpergenome=sum(length))%>%
group_by(id)%>%
mutate(median=median(lengthpergenome))
View(DefLengthForPlot)
max(EcoliDefense$end,EcoliDefense$start)
EcoliDefense$length<-module(EcoliDefense$end - EcoliDefense$start) +1
EcoliDefense$length<-abs(EcoliDefense$end - EcoliDefense$start) +1
View(EcoliDefense)
EcoliDefLengthForPlot<-subset(EcoliDefense,
EcoliDefense$genome %in% SysPerGenomePlot$genome)
PreDefLengthForPlot<-merge(EcoliDefLengthForPlot, SysPerGenomePlot[,c(1,2)], by="genome")
DefLengthForPlot<- PreDefLengthForPlot %>% group_by(id,genome)%>%
summarise(lengthpergenome=sum(length))%>%
group_by(id)%>%
mutate(median=median(lengthpergenome))
ggplot(data=DefLengthForPlot,
aes(x=lengthpergenome, group=id, fill=id))+
geom_histogram(bins=15)+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"),
name = "")+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
#scale_x_continuous(breaks=seq(1,20,1), limits=c(0,18))+
xlab("Defence systems per genome")
ggplot(data=DefLengthForPlot,
aes(x=lengthpergenome, group=id, fill=id))+
geom_histogram(bins=15)+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"),
name = "")+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(limits=c(0,150000))+
xlab("Defence systems per genome")
ggplot(data=DefLengthForPlot,
aes(x=lengthpergenome, group=id, fill=id))+
geom_histogram(bins=15)+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"),
name = "")+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(limits=c(0,150000), breaks=seq(0,150000,10000))+
xlab("Defence systems per genome")
ggplot(data=DefLengthForPlot,
aes(x=lengthpergenome, group=id, fill=id))+
geom_histogram(bins=30)+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"),
name = "")+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(limits=c(0,150000), breaks=seq(0,150000,10000))+
xlab("Defence systems per genome")
EcoliDefLengthForPlot<-subset(EcoliDefense,
EcoliDefense$genome %in% unique(SysPerGenomePlot$genome))
View(EcoliDefLengthForPlot)
PreDefLengthForPlot<-merge(EcoliDefLengthForPlot, SysPerGenomePlot[,c(1,2)], by="genome")
View(PreDefLengthForPlot)
View(EcoliDefense)
?quantile
quantile(PreDefLengthForPlot, probs=seq(0.05,0.95))
quantile(PreDefLengthForPlot$length, probs=seq(0.05,0.95))
quantile(PreDefLengthForPlot$length, probs=seq(0.05, 0.95))
quantile(PreDefLengthForPlot$length, probs=c(0.05, 0.95))
quantile(PreDefLengthForPlot$length, probs=c(0.03, 0.97))
quantile(PreDefLengthForPlot$length, probs=c(0.01, 0.99))
c(minlen,maxlen)<-quantile(PreDefLengthForPlot$length, probs=c(0.01, 0.99))
minmaxlength<-quantile(PreDefLengthForPlot$length, probs=c(0.01, 0.99))
PreDefLengthForPlot<-subset(PreDefLengthForPlot,
PreDefLengthForPlot$length > minmaxlength[1] &
PreDefLengthForPlot$length < minmaxlength[2])
DefLengthForPlot<- PreDefLengthForPlot %>% group_by(id,genome)%>%
summarise(lengthpergenome=sum(length))%>%
group_by(id)%>%
mutate(median=median(lengthpergenome))
#Plot
ggplot(data=DefLengthForPlot,
aes(x=lengthpergenome, group=id, fill=id))+
geom_histogram(bins=30)+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"),
name = "")+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(limits=c(0,150000), breaks=seq(0,150000,10000))+
xlab("Defence systems per genome")
ggplot(data=DefLengthForPlot,
aes(x=lengthpergenome, group=id, fill=id))+
geom_histogram(bins=30)+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"),
name = "")+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(breaks=seq(0,150000,10000))+
xlab("Defence systems per genome")
SysPerGenomePlotObj<-ggplot(data=SysPerGenomePlot,
aes(x=syspergenome, group=id, fill=id))+
geom_histogram(bins=15)+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"),
name = "")+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(breaks=seq(1,20,1), limits=c(0,18))+
xlab("Defence systems per genome")
SysPerGenomePlotObj
LengthPerGenomePlot<-ggplot(data=DefLengthForPlot,
aes(x=lengthpergenome, group=id, fill=id))+
geom_histogram(bins=30)+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"),
name = "")+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(breaks=seq(0,150000,10000))+
xlab("Defence systems per genome")
LengthPerGenomePlot
ggarrange(SysPerGenomePlotObj, LengthPerGenomePlot,
ncol=2)
LengthPerGenomePlot<-ggplot(data=DefLengthForPlot,
aes(x=lengthpergenome, group=id, fill=id))+
geom_histogram(bins=30)+
scale_fill_manual(values=c("#a6cee3","#1f78b4","#b2df8a",
"#33a02c","#fb9a99","#cab2d6",
"#6a3d9a"),
name = "")+
facet_wrap(~id, ncol=1, scales = "free_y")+
geom_vline(aes(xintercept = median),
linewidth=1.5,
color="#67000d")+
theme_classic()+
scale_x_continuous(breaks=seq(0,150000,10000))+
xlab("Defence systems length per genome")
LengthPerGenomePlot
ggarrange(SysPerGenomePlotObj, LengthPerGenomePlot,
ncol=2)
ggarrange(SysPerGenomePlotObj, LengthPerGenomePlot,
ncol=2,
common.legend = T)
ggarrange(SysPerGenomePlotObj, LengthPerGenomePlot,
ncol=2,
common.legend = T,
legend = "right")
